#smart_gaps on
#smart_borders on
#exec_always --no-startup-id waybar
##~/.config/polybar/launch.sh
#exec_always --no-startup-id export TUIR_EDITOR=nvim
#exec_always --no-startup-id copyq
exec_always --no-startup-id kanshi
exec_always --no-startup-id spotifyd 
focus_follows_mouse yes

#######################
# config starts here: #
#######################

font pango: BlexMono Nerd Font 12
#font pango: JetBrainsMono Medium 10

# set the mod key to the winkey:
set $mod Mod4

#####################
# workspace layout: #
#####################
#set $output-secondary DP-1
#set $output-primary HDMI-1
#set $output-quatiary eDP-1
#set $output-tertiary DP-2
#
#workspace_layout default
#
#workspace 1 output $output-primary
#workspace 2 output $output-primary
#workspace 3 output $output-primary
#workspace 4 output $output-primary
#workspace 5 output $output-primary
#workspace 6 output $output-secondary
#workspace 7 output $output-secondary
#workspace 8 output $output-secondary
#workspace 9 output $output-secondary
#workspace 10 output $output-secondary



# Each window will be fullscreen and tabbed top to bottom.
#workspace_layout stacking

# Each new window will open fullscreen as a tab (left to right)
#workspace_layout tabbed
set $menu wofi --hide-scroll -xoffset 0 -yoffset 0
bindgesture swipe:right workspace prev 
bindgesture swipe:left workspace next
bindgesture swipe:up exec '~/.config/wofi/scripts/wofi-list-system'
bindgesture swipe:down exec $menu
#| xargs swaymsg exec --
#bindsym $mod+space exec $menu
bindsym $mod+d exec $menu
#bindsym $mod+Ctrl+p exec '~/.config/wofi/scripts/wofi-power-menu'
bindsym $mod+end exec '~/.config/wofi/scripts/wofi-power-menu'
#bindsym $mod+XF86PowerOff exec '~/.config/wofi/scripts/wofi-power-menu'
bindsym $mod+Shift+z exec zathura
bindsym $mod+Shift+p exec cpupower-gui -p
bindsym $mod+Shift+o exec cpupower-gui -b
bindsym $mod+Shift+b exec bitwarden-desktop
bindsym $mod+Shift+w exec killall -SIGUSR1 waybar
# bindsym $mod+Shift+w exec '~/.config/wofi/scripts/wofi-list-system'
bindsym $mod+Shift+q exec '~/.config/wofi/scripts/activeworkspaces'
#bindsym $mod+Ctrl+w exec '~/.config/wofi/scripts/activeworkspaces' ; exec '~/.config/wofi/scripts/wofi-list-system' 
#bindsym $mod+Shift+++b exec 'cpupower frequency-set --governor performance'
##############################
# extra options for windows: #
##############################

#border indicator on windows:
default_border pixel 1

# thin borders
hide_edge_borders smart

# Set inner/outer gaps
gaps inner 2
gaps outer 0

# show window title bars (not officially supported with i3gaps)
#default_border normal

# window title alignment
title_align center

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch/iterate between workspaces
#bindsym $mod+x exec '--no-startup-id xmodmap  ~/.Xmodmap'
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
bindsym $mod+Shift+f exec alacritty -e ranger
bindsym $mod+Ctrl+f exec thunar
bindsym $mod+i exec torguard
#bindsym fn3 exec xbacklight +10 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

# switch to workspace
bindsym $mod+1    workspace  1
bindsym $mod+2    workspace  2
bindsym $mod+3    workspace  3
bindsym $mod+4    workspace  4
bindsym $mod+5    workspace  5
bindsym $mod+6    workspace  6
bindsym $mod+7    workspace  7
bindsym $mod+8    workspace  8
bindsym $mod+9    workspace  9
bindsym $mod+0    workspace  10

# switch to workspace with numpad keys

# switch to workspace with numlock numpad keys

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  1
bindsym $mod+Shift+2    move container to workspace  2
bindsym $mod+Shift+3    move container to workspace  3
bindsym $mod+Shift+4    move container to workspace  4
bindsym $mod+Shift+5    move container to workspace  5
bindsym $mod+Shift+6    move container to workspace  6
bindsym $mod+Shift+7    move container to workspace  7
bindsym $mod+Shift+8    move container to workspace  8
bindsym $mod+Shift+9    move container to workspace  9
bindsym $mod+Shift+0    move container to workspace  10

# move focused container to workspace with numpad keys

# move focused container to workspace with numpad keys

# resize window (you can also use the mouse for that):
#mode "resize" {
# These bindings trigger as soon as you enter the resize mode
# Pressing left will shrink the window's width.
# Pressing right will grow the window's width.
# Pressing up will shrink the window's height.
# Pressing down will grow the window's height.
bindsym $mod+Ctrl+h resize shrink width 50 px or 50 ppt
bindsym $mod+Ctrl+k resize grow height 50 px or 50 ppt
bindsym $mod+Ctrl+j resize shrink height 50 px or 50 ppt
bindsym $mod+Ctrl+l resize grow width 50 px or 50 ppt

# same bindings, but for the arrow keys
#	bindsym Left resize shrink width 10 px or 10 ppt
#        bindsym Down resize grow height 10 px or 10 ppt
#        bindsym Up resize shrink height 10 px or 10 ppt
#        bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
#	bindsym Return mode "default"
#        bindsym Escape mode "default"
#}

# bindsym $mod+r mode "resize"

######################################
# keybindings for different actions: #
######################################

# start a terminal
bindsym $mod+Return exec alacritty
bindsym $mod+Shift+Return exec alacritty -e tmux

# kill focused window
bindsym $mod+q kill

# bindsym $mod+Shift+t exec kitty -e tuir --no-flash
bindsym $mod+t exec gpaste-client  ui
bindsym $mod+Shift+y exec 'alacritty -e ytfzf -s'
bindsym $mod+Shift+v exec 'alacritty -e ytfzf -s -m'
bindsym $mod+Shift+m exec alacritty -e spt
##bindsym $mod+Shift+b exec w3mweb

# exit-menu
##bindsym $mod+Shift+e exec ~/.config/sway/powermenu

# Lock the system
# lock with a picture:
# bindsym $mod+l exec i3lock -i  ~/.config/i3/i3-lock-screen.png -p default|win -t
# lock by blurring the screen:
# bindsym $mod+l exec ~/.config/i3/scripts/blur-lock

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to update i3)
bindsym $mod+Shift+r exec liferea

# keybinding in fancy rofi (automated): bindsym F1 exec ~/.config/i3/scripts/keyhint-2
# alternative
# keybinding list in editor:
# bindsym $mod+F1 exec xed ~/.config/i3/keybindings

# Backlight control
# bindsym XF86MonBrightnessUp exec xbacklight +10 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
bindsym XF86MonBrightnessUp exec light -A 10 
bindsym $mod+XF86MonBrightnessUp exec light -A 1 
#&& notify-send "Brightness  $(cat /sys/class/backlight/amdgpu_bl0/brightness)%"
bindsym XF86MonBrightnessDown exec light -U 10 
bindsym $mod+XF86MonBrightnessDown exec light -U 1 
#&& notify-send "Brightness $(cat /sys/class/backlight/amdgpu_bl0/brightness)%" 

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+p split h

# split in vertical orientation
bindsym $mod+o split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+e exec 'code-oss  --password-store="gnome"'
bindsym $mod+Shift+e exec obsidian
#bindsym $mod+e exec /opt/clion-2023.2/bin/clion.sh
#for_window [app_id="copyq"] floating enable, sticky enable, resize set height 600px width 550px, move position cursor, move down 330
#bindsym $mod+Shift+t exec copyq toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+g layout tabbed
bindsym $mod+s layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Ctrl+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# open new empty workspace
#bindsym $mod+Shift+n exec ~/.config/i3/scripts/empty_workspace

# Multimedia Keys

# volume
bindsym XF86AudioRaiseVolume exec '/home/baum/.config/pactl/raise_volume.sh'
#pactl set-sink-volume 0 +10%; 
#exec 
#pactl set-sink-volume bluez_output.74_45_CE_6F_AB_89.1 +10%
bindsym XF86AudioLowerVolume exec '/home/baum/.config/pactl/lower_volume.sh'
#pactl set-sink-volume 0 -10%; 
#exec pactl set-sink-volume bluez_output.74_45_CE_6F_AB_89.1 -10%

# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec '/home/baum/.config/pactl/raise_volume_one_percent.sh'
#exec pactl set-sink-volume 0 +1%
bindsym $mod+XF86AudioLowerVolume exec '/home/baum/.config/pactl/lower_volume_one_percent.sh'
#pactl set-sink-volume 0 -1%

# mute
bindsym XF86AudioMute exec '/home/baum/.config/pactl/mute_all_sinks.sh'
#pactl set-sink-mute 0 toggle; 
#exec pactl set-sink-mute bluez_output.74_45_CE_6F_AB_89.1 toggle

#mute microphone
bindsym XF86AudioMicMute exec '/home/baum/.config/pactl/mute_all_mics.sh'
#pactl set-source-mute 0 toggle

# audio control
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Redirect sound to headphones
#bindsym $mod+p exec /usr/local/bin/switch-audio-port

## App shortcuts
#bindsym $mod+w exec /usr/bin/librewolf
bindsym $mod+w exec firefox-nightly
#bindsym $mod+n exec /usr/bin/thunar
bindsym $mod+n exec iwgtk
bindsym $mod+b exec alacritty -e bluetuith
#bindsym $mod+b exec blueman-manager
bindsym $mod+m exec thunderbird
#
#bindsym Print exec scrot ~/Pictures/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/Pictures/$(date +"%Y-%m-%d-%T")-screenshot.png"

# Power Profiles menu switcher (rofi)


##########################################
# configuration for workspace behaviour: #
##########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command
#workspace $ws1 output VGA-0
#workspace $ws2 output VGA-0
#workspace $ws3 output HDMI-0
#workspace $ws4 output HDMI-0
#workspace $ws5 output HDMI-0

# bind program to workspace and focus to them on startup:
#assign [class="Xfce4-terminal"] $ws1
#assign [class="(?i)librewolf"] $ws2
#assign [class="Thunar"] $ws3
#assign [class="thunderbird"] $ws4
#assign [class="TelegramDesktop"] $ws5

# automatic set focus new window if it opens on another workspace than the current:
for_window [class=Xfce4-terminal] focus
for_window [class=(?i)librewolf] focus
for_window [class=Thunar] focus
for_window [class=Thunderbird] focus
for_window [class=TelegramDesktop] focus

##############
# compositor #
##############

# transparency
# uncomment one of them to be used
# options could need changes, related to used GPU and drivers.
# to find the right setting consult the archwiki or ask at the forum.
#
# xcompmgr: https://wiki.archlinux.org/title/Xcompmgr
# manpage: https://man.archlinux.org/man/xcompmgr.1.en
# install xcompmgr package to use it (yay -S xcompmgr)
#exec --no-startup-id xcompmgr -C -n &
# or an more specialized config like this:
#exec --no-startup-id xcompmgr -c -C -t-5 -l-5 -r4.2 -o.55 &
#
# or:
#
# picom: https://wiki.archlinux.org/title/Picom
# manpage: https://man.archlinux.org/man/picom.1.en
# The default configuration is available in /etc/xdg/picom.conf 
# For modifications, it can be copied to ~/.config/picom/picom.conf or ~/.config/picom.conf
# install picom package (yay -S picom)
# start using default config 
#exec_always --no-startup-id picom -b
#
# for custom config:
#exec_always --no-startup-id picom --config  ~/.config/picom.conf

#############################################
# autostart applications/services on login: #
#############################################

#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

#output * bg-fill 'find $wallpapers_path -type f | shuf -n 1` fill  
#set scaling mode for wallpaper
#exec_always swaybg -i /home/baum/Pictures/wavesdrawn.png -s fill
#output * bg '/home/baum/Pictures/wavesdrawn.png' fill
#output * bg '/home/baum/Pictures/img/mactree.jpg' fill
output * bg '/home/baum/Pictures/4lucie.jpeg' fill
#output * bg '/home/baum/Pictures/archprd.png' fill
# https://www.jwz.org/xscreensaver
#exec --no-startup-id xscreensaver --no-splash

# Desktop notifications
exec --no-startup-id dbus-launch dunst --config ~/.config/dunst/dunstrc
# alternative if you installed aside with XFCE4:
# exec --no-startup-id /usr/lib/xfce4/notifyd/xfce4-notifyd &

# autotiling script
# https://github.com/nwg-piotr/autotiling
# `yay -S autotiling ;) (it is in AUR)
#exec_always --no-startup-id autotiling

# Autostart apps as you like
#exec --no-startup-id sleep 2 && terminator
#exec --no-startup-id sleep 7 && librewolf https://github.com/endeavouros-team/endeavouros-i3wm-setup/blob/main/force-knowledge.md
#exec --no-startup-id sleep 3 && thunar

###############
# system tray #
###############
# if you do not use dex: exec --no-startup-id dex --autostart --environment i3
# you need to have tray apps started manually one by one:

# start blueberry app for managing bluetooth devices from tray:
#exec --no-startup-id blueberry-tray

# networkmanager-applet
#exec --no-startup-id nm-applet

# clipman-applet
#exec --no-startup-id xfce4-clipman

##################
# floating rules #for_window [app_id="ncmpcpp"] floating enablfor_window [app_id="ncmpcpp"] floating enabl
##################

# set floating (nontiling) for apps needing it
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bitwarden" instance="bitwarden"] floating enable, resize set 480 480, move absolute position 0 0 
for_window [class="obsidian" instance="obsidian"] floating enable, move absolute position 0 0

# set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [window_role="About"] floating enable

# set border of floating window
for_window [class="urxvt"] border pixel 1

# set size of floating window
#for_window [window_role="(?i)GtkFileChooserDialog"] resize set 640 480 #to set size of file choose dialog
#for_window [class="Bitwarden"] resize set 480 480 #to change size of all floating windows 

# set position of floating window
#for_window [class="Bitwarden"] move position right

######################################
# color settings for bar and windows #
######################################

# Define colors variables:
set $darkbluetrans	#08052be6
set $darkblue		#1A1A1A
set $lightblue		#5294e2
set $urgentred		#e53935
set $white		#e8e8e8
set $black		#000000
set $purple		#e345ff
set $darkgrey		#383c4a
set $grey		#b0b5bd
set $mediumgrey		#8b8b8b
set $yellowbrown	#e1b700

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
client.unfocused		    	$darkblue $darkblue $white $darkblue $darkblue
client.focused	    	$white $white $darkblue $white $white
client.focused_inactive		$darkblue	$darkblue	$grey		$black		$black
client.urgent		    	$darkblue $urgentred	$white		$yellowbrown	$yellowbrown
#
#client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
#client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
#client.unfocused        #333333 #222222 #888888 #292d2e   #222222
#client.urgent           #2f343a #900000 #ffffff #900000   #900000
#client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
#
#client.background       #ffffff
############################################
# bar settings (input comes from i3blocks) #
############################################

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
#
#
## any workspace that has a name of the form
## “[n][:][NAME]” will display only the name.
#strip_workspace_numbers yes
###strip_workspace_name no
#
#		    colors {
#		    separator          $purple
#		    background         $darkgrey
#		    statusline         $white
##                          		border 		        bg		txt		indicator
#		focused_workspace	$mediumgrey	   	$grey		$darkgrey	$purple
#		active_workspace	$lightblue      	$mediumgrey	$darkgrey	$purple
#		inactive_workspace	$darkgrey   		$darkgrey	$grey		$purple
#		urgent_workspace	$urgentred	    	$urgentred	$white		$purple
#	}
#}

# you can add different bars for multidisplay setups on each display:
# set output HDMI-0 to the display you want the bar, --transparency can be set.
# Transparency needs rgba color codes to be used where the last two letters are the transparency factor see here:
# https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
# #08052be6 --> e6=90%

# bar {
#	font pango: Noto Sans Regular 10
#	status_command i3blocks -c ~/.config/i3/i3blocks-2.conf
#	i3bar_command i3bar --transparency
#	output HDMI-0
#	position bottom
#
# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
# strip_workspace_numbers yes

# bindsym $mod+Shift+z layout toggle split
# bindsym $mod+Shift+x layout tabbed
#####################################
# Application menu handled by rofi: #
#####################################

## rofi bindings fancy application menu ($mod+d /F9 optional disabled)

#\
#		-config ~/.config/rofi/rofidmenu.rasi

##bindsym F9 exec wofi -modi drun -show drun \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings for window menu ($mod+t /F10 optional disabled)
bindsym $mod+Shift+Ctrl+l exec swaylock
##bindsym $mod+t exec wofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

##bindsym F10 exec rofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings to manage clipboard (install rofi-greenclip from the AUR)
#exec swayidle -w timeout 300 'swaylock' timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' before-sleep 'swaylock -f' &
exec swayidle -w timeout 300 'swaylock -f -c 000000' timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' before-sleep 'swaylock -f -c 000000'

#set $lock 'swaylock'
##turn bluetooth on/off
#set $btoff 'bluetoothctl power off'
#set $bton 'bluetoothctl power on'
#set $intoff 'nmcli radio wifi off'
#set $inton 'nmcli radio wifi on'


# activate screen lock when lid is closed

 #bindswitch --reload --locked lid:on exec $lock
# exec swayidle -w \
#          timeout 300 'swaylock -f' \
#          before-sleep 'swaylock -f'
#exec --no-startup-id greenclip daemon>/dev/null
# bindsym $mod+c exec --no-startup-id wofi --modi "clipboard:greenclip print" -show clipboard \
bindsym print exec grim - | swappy -f -
# bindsym print exec flameshot full
bindsym Shift+print exec grim -g "$(slurp)" - | swappy -f -
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal
#		-config ~/.config/rofi/rofidmenu.rasi
input type:keyboard {
    xkb_layout "us"
    xkb_options "caps:escape"
}
#set $my_cursor volantes_cursors
#set $my_cursor_size 1

#seat seat0 xcursor_theme $my_cursor $my_cursor_size
##exec_always {
##    gsettings set org.gnome.desktop.interface cursor-theme $my_cursor
##    gsettings set org.gnome.desktop.interface cursor-size $my_cursor_size
##}

#default_border normal
#default_floating_border normal
default_floating_border none
bar {
    swaybar_command waybar
}
#lock screen and suspend

# bindsym $mod+Shift+s exec 'systemctl suspend && swaylock -f'
include /etc/sway/config.d/*
